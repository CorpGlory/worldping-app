{"version":3,"sources":["../../../src/components/config/config.js"],"names":[],"mappings":"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","file":"config.js","sourcesContent":["import configTemplate from './config.html!text';\n\nimport _ from 'lodash' ;\n\nclass WorldPingConfigCtrl {\n  constructor($scope, $injector, $q, backendSrv, alertSrv) {\n    this.$q = $q;\n    this.backendSrv = backendSrv;\n    this.alertSrv = alertSrv;\n    this.validKey = false;\n    this.quotas = {};\n    this.appEditCtrl.setPreUpdateHook(this.preUpdate.bind(this));\n    this.appEditCtrl.setPostUpdateHook(this.postUpdate.bind(this));\n\n    if (this.appModel.jsonData === null) {\n      this.appModel.jsonData = {};\n    }\n    if (!this.appModel.secureJsonData) {\n      this.appModel.secureJsonData = {};\n    }\n    if (this.appModel.enabled) {\n      this.validateKey();\n    }\n  }\n\n  reset() {\n    this.appModel.jsonData.apiKeySet=false;\n    this.validKey = false;\n  }\n\n  validateKey() {\n    var self = this;\n    var p = this.backendSrv.get('api/plugin-proxy/raintank-worldping-app/api/v2/quotas');\n    p.then((resp) => {\n      if (resp.meta.code !== 200) {\n        self.alertSrv.set(\"failed to get Quotas\", resp.message, 'error', 10000);\n        return self.$q.reject(resp.message);\n      }\n      self.validKey = true;\n      self.quotas = resp.body;\n    }, (resp) => {\n      if (self.appModel.enabled) {\n        self.alertSrv.set(\"failed to verify apiKey\", resp.statusText, 'error', 10000);\n        self.appModel.enabled = false;\n        self.appModel.jsonData.apiKeySet = false;\n        self.appModel.secureJsonData.apiKey = \"\";\n        self.errorMsg = \"invalid apiKey\";\n        this.validKey = false;\n      }\n    });\n    return p;\n  }\n\n  preUpdate() {\n    var model = this.appModel;\n    if (!model.enabled) {\n      return this.$q.resolve();\n    }\n\n    if (!model.jsonData.apiKeySet && !model.secureJsonData.apiKey) {\n      model.enabled = false;\n      this.errorMsg = \"apiKey not set\";\n      this.validKey = false;\n      return this.$q.reject(\"apiKey not set.\");\n    }\n    model.jsonData.apiKeySet = true;\n    return this.initDatasource();\n  }\n\n  postUpdate() {\n    if (!this.appModel.enabled) {\n      return this.$q.resolve();\n    }\n    var self = this;\n    return this.validateKey()\n    .then(() => {\n      return self.appEditCtrl.importDashboards().then(() => {\n        return {\n          url: \"dashboard/db/worldping-home\",\n          message: \"worldPing app installed!\"\n        };\n      });\n    });\n  }\n\n  configureDatasource() {\n    this.appModel.jsonData.datasourceSet = false;\n    this.initDatasource().then(() => {\n      this.appModel.jsonData.datasourceSet = true;\n    });\n  }\n\n  initDatasource() {\n    var self = this;\n    //check for existing datasource.\n    var p = self.backendSrv.get('/api/datasources');\n    p.then(function(results) {\n      var foundGraphite = false;\n      var foundElastic = false;\n      _.forEach(results, function(ds) {\n        if (foundGraphite && foundElastic) { return; }\n        if (ds.name === \"raintank\") {\n          foundGraphite = true;\n        }\n        if (ds.name === \"raintankEvents\") {\n          foundElastic = true;\n        }\n      });\n      var promises = [];\n      if (!foundGraphite) {\n        // create datasource.\n        var graphite = {\n          name: 'raintank',\n          type: 'graphite',\n          url: 'api/plugin-proxy/raintank-worldping-app/api/graphite',\n          access: 'direct',\n          jsonData: {}\n        };\n        promises.push(self.backendSrv.post('/api/datasources', graphite));\n      }\n      if (!foundElastic) {\n        // create datasource.\n        var elastic = {\n          name: 'raintankEvents',\n          type: 'elasticsearch',\n          url: 'api/plugin-proxy/raintank-worldping-app/api/elasticsearch',\n          access: 'direct',\n          database: '[events-]YYYY-MM-DD',\n          jsonData: {\n            esVersion: 1,\n            interval: \"Daily\",\n            timeField: \"timestamp\"\n          }\n        };\n        promises.push(self.backendSrv.post('/api/datasources', elastic));\n      }\n      return self.$q.all(promises);\n    });\n    return p;\n  }\n}\n\nWorldPingConfigCtrl.template = configTemplate;\n\nexport {\n  WorldPingConfigCtrl as ConfigCtrl\n};\n"]}