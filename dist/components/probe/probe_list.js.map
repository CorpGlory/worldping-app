{"version":3,"sources":["../../../src/components/probe/probe_list.js"],"names":["_","DatasourceUpgrader","ProbeListCtrl","$scope","$injector","$location","$filter","backendSrv","contextSrv","$q","isOrgAdmin","hasRole","pageReady","statuses","label","value","online","enabled","id","filter","tag","status","sort_field","probes","getProbes","datasourceUpgrader","upgrade","map","forEach","probe","tags","Object","keys","self","actual","res","length","get","then","resp","meta","code","alertSrv","set","message","reject","body","collector","path","search","slug","templateUrl"],"mappings":"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","file":"probe_list.js","sourcesContent":["import _ from 'lodash';\nimport DatasourceUpgrader from '../config/dsUpgrade';\n\nclass ProbeListCtrl {\n\n  /** @ngInject */\n  constructor($scope, $injector, $location, $filter, backendSrv, contextSrv, $q) {\n    this.isOrgAdmin = contextSrv.hasRole('Admin');\n    this.backendSrv = backendSrv;\n    this.$filter = $filter;\n    this.$location = $location;\n    this.$q = $q;\n    this.pageReady = false;\n    this.statuses = [\n      {label: \"Online\", value: {online: true, enabled: true}, id: 2},\n      {label: \"Offline\", value: {online: false, enabled: true}, id: 3},\n      {label: \"Disabled\", value: {enabled: false}, id: 4},\n    ];\n\n    this.filter = {tag: \"\", status: \"\"};\n    this.sort_field = \"name\";\n    this.probes = [];\n    this.getProbes();\n    this.datasourceUpgrader = new DatasourceUpgrader(backendSrv, $q);\n    this.datasourceUpgrader.upgrade();\n  }\n\n  probeTags() {\n    var map = {};\n    _.forEach(this.probes, function(probe) {\n      _.forEach(probe.tags, function(tag) {\n        map[tag] = true;\n      });\n    });\n    return Object.keys(map);\n  }\n\n  setProbeFilter(tag) {\n    this.filter.tag = tag;\n  }\n\n  statusFilter() {\n    var self = this;\n    return function(actual) {\n      if (!self.filter.status) {\n        return true;\n      }\n      var res = self.$filter('filter')([actual], self.filter.status);\n      return res.length > 0;\n    };\n  }\n\n  getProbes() {\n    var self = this;\n    return this.backendSrv.get('api/plugin-proxy/raintank-worldping-app/api/v2/probes').then(function(resp) {\n      if (resp.meta.code !== 200) {\n        self.alertSrv.set(\"failed to get probes.\", resp.meta.message, 'error', 10000);\n        return self.$q.reject(resp.meta.message);\n      }\n      self.pageReady = true;\n      self.probes = resp.body;\n    });\n  }\n\n  gotoDashboard(collector) {\n    this.$location.path(\"/dashboard/db/worldping-collector-summary\").search({\"var-collector\": collector.slug, \"var-endpoint\": \"All\"});\n  }\n}\n\nProbeListCtrl.templateUrl = 'public/plugins/raintank-worldping-app/components/probe/partials/probe_list.html';\nexport {ProbeListCtrl};\n"]}