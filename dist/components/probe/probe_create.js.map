{"version":3,"sources":["../../../src/components/probe/probe_create.js"],"names":["angular","_","defaults","name","enabled","ProbeCreateCtrl","$scope","$injector","$location","$q","backendSrv","alertSrv","self","newProbe","installMethod","deb","rpm","docker","manual","probe","copy","search","getProbe","reset","newMethod","forEach","method","console","log","id","get","then","resp","meta","code","set","message","reject","body","put","post","newCollector","showConfigInfo","showDistroConfig","templateUrl"],"mappings":";;;;;;;;;;;;;;;AAAOA,a;;AACAC,O;;;;;;;;;;;;;;;;;;;;;AAEHC,c,GAAW;AACbC,cAAM,EADO;AAEbC,iBAAS;AAFI,O;;iCAKTC,e;;AAEJ;AACA,iCAAYC,MAAZ,EAAoBC,SAApB,EAA+BC,SAA/B,EAA0CC,EAA1C,EAA8CC,UAA9C,EAA0DC,QAA1D,EAAoE;AAAA;;AAClE,cAAIC,OAAO,IAAX;AACA,eAAKH,EAAL,GAAUA,EAAV;AACA,eAAKE,QAAL,GAAgBA,QAAhB;AACA,eAAKD,UAAL,GAAkBA,UAAlB;AACA,eAAKF,SAAL,GAAiBA,SAAjB;AACA,eAAKK,QAAL,GAAgB,KAAhB;AACA,eAAKC,aAAL,GAAqB;AACnBC,iBAAK,KADc;AAEnBC,iBAAK,KAFc;AAGnBC,oBAAQ,KAHW;AAInBC,oBAAQ;AAJW,WAArB;AAMA,eAAKC,KAAL,GAAanB,QAAQoB,IAAR,CAAalB,QAAb,CAAb;;AAEA,cAAI,WAAWM,UAAUa,MAAV,EAAf,EAAmC;AACjCT,iBAAKU,QAAL,CAAcd,UAAUa,MAAV,GAAmBF,KAAjC;AACD,WAFD,MAEO;AACLP,iBAAKW,KAAL;AACD;AACF;;;;2CAEgBC,S,EAAW;AAC1B,gBAAIZ,OAAO,IAAX;AACAX,cAAEwB,OAAF,CAAU,KAAKX,aAAf,EAA8B,UAASV,OAAT,EAAkBsB,MAAlB,EAA0B;AACtD,kBAAIA,WAAWF,SAAf,EAA0B;AACxBZ,qBAAKE,aAAL,CAAmBY,MAAnB,IAA6B,IAA7B;AACD,eAFD,MAEO;AACLd,qBAAKE,aAAL,CAAmBY,MAAnB,IAA6B,KAA7B;AACD;AACF,aAND;AAOAC,oBAAQC,GAAR,CAAY,KAAKd,aAAjB;AACD;;;mCAEQe,E,EAAI;AACX,gBAAIjB,OAAO,IAAX;AACA,mBAAO,KAAKF,UAAL,CAAgBoB,GAAhB,CAAoB,2DAAyDD,EAA7E,EAAiFE,IAAjF,CAAsF,UAACC,IAAD,EAAU;AACrG,kBAAIA,KAAKC,IAAL,CAAUC,IAAV,KAAmB,GAAvB,EAA4B;AAC1BtB,qBAAKD,QAAL,CAAcwB,GAAd,CAAkB,sBAAlB,EAA0CH,KAAKC,IAAL,CAAUG,OAApD,EAA6D,OAA7D,EAAsE,KAAtE;AACA,uBAAOxB,KAAKH,EAAL,CAAQ4B,MAAR,CAAeL,KAAKC,IAAL,CAAUG,OAAzB,CAAP;AACD;AACDxB,mBAAKO,KAAL,GAAaa,KAAKM,IAAlB;AACD,aANM,CAAP;AAOD;;;kCAEO;AACN,iBAAKnB,KAAL,GAAanB,QAAQoB,IAAR,CAAalB,QAAb,CAAb;AACD;;;iCAEM;AACL,gBAAIU,OAAO,IAAX;AACA,mBAAO,KAAKF,UAAL,CAAgB6B,GAAhB,CAAoB,uDAApB,EAA6E,KAAKpB,KAAlF,EAAyFY,IAAzF,CAA8F,UAACC,IAAD,EAAU;AAC7G,kBAAIA,KAAKC,IAAL,CAAUC,IAAV,KAAmB,GAAvB,EAA4B;AAC1BtB,qBAAKD,QAAL,CAAcwB,GAAd,CAAkB,uBAAlB,EAA2CH,KAAKC,IAAL,CAAUG,OAArD,EAA8D,OAA9D,EAAuE,KAAvE;AACA,uBAAOxB,KAAKH,EAAL,CAAQ4B,MAAR,CAAeL,KAAKC,IAAL,CAAUG,OAAzB,CAAP;AACD;AACF,aALM,CAAP;AAMD;;;gCAEK;AACJ,gBAAIxB,OAAO,IAAX;AACA,mBAAO,KAAKF,UAAL,CAAgB8B,IAAhB,CAAqB,uDAArB,EAA8E,KAAKrB,KAAnF,EAA0FY,IAA1F,CAA+F,UAACC,IAAD,EAAU;AAC9G,kBAAIA,KAAKC,IAAL,CAAUC,IAAV,KAAmB,GAAvB,EAA4B;AAC1BtB,qBAAKD,QAAL,CAAcwB,GAAd,CAAkB,sBAAlB,EAA0CH,KAAKC,IAAL,CAAUG,OAApD,EAA6D,OAA7D,EAAsE,KAAtE;AACA,uBAAOxB,KAAKH,EAAL,CAAQ4B,MAAR,CAAeL,KAAKC,IAAL,CAAUG,OAAzB,CAAP;AACD;AACDxB,mBAAK6B,YAAL,GAAoB,IAApB;AACA7B,mBAAKO,KAAL,GAAaa,KAAKM,IAAlB;AACD,aAPM,CAAP;AAQD;;;uCAEY;AACX,iBAAKI,cAAL,GAAsB,IAAtB;AACD;;;0CAEe;AACd,iBAAKC,gBAAL,GAAwB,KAAxB;AACD;;;wCAEa;AACZ,iBAAKA,gBAAL,GAAwB,IAAxB;AACD;;;;;;AAGHtC,sBAAgBuC,WAAhB,GAA8B,mFAA9B;;iCAEEvC,e","file":"probe_create.js","sourcesContent":["import angular from 'angular';\nimport _ from 'lodash';\n\nvar defaults = {\n  name: '',\n  enabled: true,\n};\n\nclass ProbeCreateCtrl {\n\n  /** @ngInject */\n  constructor($scope, $injector, $location, $q, backendSrv, alertSrv) {\n    var self = this;\n    this.$q = $q;\n    this.alertSrv = alertSrv;\n    this.backendSrv = backendSrv;\n    this.$location = $location;\n    this.newProbe = false;\n    this.installMethod = {\n      deb: false,\n      rpm: false,\n      docker: false,\n      manual: false,\n    };\n    this.probe = angular.copy(defaults);\n\n    if (\"probe\" in $location.search()) {\n      self.getProbe($location.search().probe);\n    } else {\n      self.reset();\n    }\n  }\n\n  setInstallMethod(newMethod) {\n    var self = this;\n    _.forEach(this.installMethod, function(enabled, method) {\n      if (method === newMethod) {\n        self.installMethod[method] = true;\n      } else {\n        self.installMethod[method] = false;\n      }\n    });\n    console.log(this.installMethod);\n  }\n\n  getProbe(id) {\n    var self = this;\n    return this.backendSrv.get(\"api/plugin-proxy/raintank-worldping-app/api/v2/probes/\"+id).then((resp) => {\n      if (resp.meta.code !== 200) {\n        self.alertSrv.set(\"failed to get probe.\", resp.meta.message, 'error', 10000);\n        return self.$q.reject(resp.meta.message);\n      }\n      self.probe = resp.body;\n    });\n  }\n\n  reset() {\n    this.probe = angular.copy(defaults);\n  }\n\n  save() {\n    var self = this;\n    return this.backendSrv.put(\"api/plugin-proxy/raintank-worldping-app/api/v2/probes\", this.probe).then((resp) => {\n      if (resp.meta.code !== 200) {\n        self.alertSrv.set(\"failed to save probe.\", resp.meta.message, 'error', 10000);\n        return self.$q.reject(resp.meta.message);\n      }\n    });\n  }\n\n  add() {\n    var self = this;\n    return this.backendSrv.post(\"api/plugin-proxy/raintank-worldping-app/api/v2/probes\", this.probe).then((resp) => {\n      if (resp.meta.code !== 200) {\n        self.alertSrv.set(\"failed to add probe.\", resp.meta.message, 'error', 10000);\n        return self.$q.reject(resp.meta.message);\n      }\n      self.newCollector = true;\n      self.probe = resp.body;\n    });\n  }\n\n  configInfo() {\n    this.showConfigInfo = true;\n  }\n\n  defaultDistro() {\n    this.showDistroConfig = false;\n  }\n\n  otherDistro() {\n    this.showDistroConfig = true;\n  }\n}\n\nProbeCreateCtrl.templateUrl = 'public/plugins/raintank-worldping-app/components/probe/partials/probe_create.html';\nexport {\n  ProbeCreateCtrl\n};\n\n"]}